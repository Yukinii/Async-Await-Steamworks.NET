// This file is provided under The MIT License as part of Steamworks.NET.
// Copyright (c) 2013-2015 Riley Labrecque
// Please see the included LICENSE.txt for additional information.

// This file is automatically generated.
// Changes to this file will be reverted when you update Steamworks.NET

namespace Steamworks {
	public static class Constants {
		public const string STEAMAPPLIST_INTERFACE_VERSION = "STEAMAPPLIST_INTERFACE_VERSION001";
		public const string STEAMAPPS_INTERFACE_VERSION = "STEAMAPPS_INTERFACE_VERSION007";
		public const string STEAMAPPTICKET_INTERFACE_VERSION = "STEAMAPPTICKET_INTERFACE_VERSION001";
		public const string STEAMCLIENT_INTERFACE_VERSION = "SteamClient017";
		public const string STEAMCONTROLLER_INTERFACE_VERSION = "SteamController003";
		public const string STEAMFRIENDS_INTERFACE_VERSION = "SteamFriends015";
		public const string STEAMGAMECOORDINATOR_INTERFACE_VERSION = "SteamGameCoordinator001";
		public const string STEAMGAMESERVER_INTERFACE_VERSION = "SteamGameServer012";
		public const string STEAMGAMESERVERSTATS_INTERFACE_VERSION = "SteamGameServerStats001";
		public const string STEAMHTMLSURFACE_INTERFACE_VERSION = "STEAMHTMLSURFACE_INTERFACE_VERSION_003";
		public const string STEAMHTTP_INTERFACE_VERSION = "STEAMHTTP_INTERFACE_VERSION002";
		public const string STEAMINVENTORY_INTERFACE_VERSION = "STEAMINVENTORY_INTERFACE_V001";
		public const string STEAMMATCHMAKING_INTERFACE_VERSION = "SteamMatchMaking009";
		public const string STEAMMATCHMAKINGSERVERS_INTERFACE_VERSION = "SteamMatchMakingServers002";
		public const string STEAMMUSIC_INTERFACE_VERSION = "STEAMMUSIC_INTERFACE_VERSION001";
		public const string STEAMMUSICREMOTE_INTERFACE_VERSION = "STEAMMUSICREMOTE_INTERFACE_VERSION001";
		public const string STEAMNETWORKING_INTERFACE_VERSION = "SteamNetworking005";
		public const string STEAMREMOTESTORAGE_INTERFACE_VERSION = "STEAMREMOTESTORAGE_INTERFACE_VERSION013";
		public const string STEAMSCREENSHOTS_INTERFACE_VERSION = "STEAMSCREENSHOTS_INTERFACE_VERSION002";
		public const string STEAMUGC_INTERFACE_VERSION = "STEAMUGC_INTERFACE_VERSION007";
		public const string STEAMUNIFIEDMESSAGES_INTERFACE_VERSION = "STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001";
		public const string STEAMUSER_INTERFACE_VERSION = "SteamUser018";
		public const string STEAMUSERSTATS_INTERFACE_VERSION = "STEAMUSERSTATS_INTERFACE_VERSION011";
		public const string STEAMUTILS_INTERFACE_VERSION = "SteamUtils007";
		public const string STEAMVIDEO_INTERFACE_VERSION = "STEAMVIDEO_INTERFACE_V001";
		public const int AppProofOfPurchaseKeyMax = 64; // max bytes of a legacy cd key we support
		//-----------------------------------------------------------------------------
		// Purpose: Base values for callback identifiers, each callback must
		//			have a unique ID.
		//-----------------------------------------------------------------------------
		public const int SteamUserCallbacks = 100;
		public const int SteamGameServerCallbacks = 200;
		public const int SteamFriendsCallbacks = 300;
		public const int SteamBillingCallbacks = 400;
		public const int SteamMatchmakingCallbacks = 500;
		public const int SteamContentServerCallbacks = 600;
		public const int SteamUtilsCallbacks = 700;
		public const int ClientFriendsCallbacks = 800;
		public const int ClientUserCallbacks = 900;
		public const int SteamAppsCallbacks = 1000;
		public const int SteamUserStatsCallbacks = 1100;
		public const int SteamNetworkingCallbacks = 1200;
		public const int ClientRemoteStorageCallbacks = 1300;
		public const int ClientDepotBuilderCallbacks = 1400;
		public const int SteamGameServerItemsCallbacks = 1500;
		public const int ClientUtilsCallbacks = 1600;
		public const int SteamGameCoordinatorCallbacks = 1700;
		public const int SteamGameServerStatsCallbacks = 1800;
		public const int Steam2AsyncCallbacks = 1900;
		public const int SteamGameStatsCallbacks = 2000;
		public const int ClientHTTPCallbacks = 2100;
		public const int ClientScreenshotsCallbacks = 2200;
		public const int SteamScreenshotsCallbacks = 2300;
		public const int ClientAudioCallbacks = 2400;
		public const int ClientUnifiedMessagesCallbacks = 2500;
		public const int SteamStreamLauncherCallbacks = 2600;
		public const int ClientControllerCallbacks = 2700;
		public const int SteamControllerCallbacks = 2800;
		public const int ClientParentalSettingsCallbacks = 2900;
		public const int ClientDeviceAuthCallbacks = 3000;
		public const int ClientNetworkDeviceManagerCallbacks = 3100;
		public const int ClientMusicCallbacks = 3200;
		public const int ClientRemoteClientManagerCallbacks = 3300;
		public const int ClientUGCCallbacks = 3400;
		public const int SteamStreamClientCallbacks = 3500;
		public const int ClientProductBuilderCallbacks = 3600;
		public const int ClientShortcutsCallbacks = 3700;
		public const int ClientRemoteControlManagerCallbacks = 3800;
		public const int SteamAppListCallbacks = 3900;
		public const int SteamMusicCallbacks = 4000;
		public const int SteamMusicRemoteCallbacks = 4100;
		public const int ClientVRCallbacks = 4200;
		public const int ClientReservedCallbacks = 4300;
		public const int SteamReservedCallbacks = 4400;
		public const int SteamHTMLSurfaceCallbacks = 4500;
		public const int ClientVideoCallbacks = 4600;
		public const int ClientInventoryCallbacks = 4700;
		public const int ClientBluetoothManagerCallbacks = 4800;
		// maximum length of friend group name (not including terminating nul!)
		public const int MaxFriendsGroupName = 64;
		// maximum number of groups a single user is allowed
		public const int FriendsGroupLimit = 100;
		public const int EnumerateFollowersMax = 50;
		// maximum number of characters in a user's name. Two flavors; one for UTF-8 and one for UTF-16.
		// The UTF-8 version has to be very generous to accomodate characters that get large when encoded
		// in UTF-8.
		public const int PersonaNameMax = 128;
		// size limit on chat room or member metadata
		public const int ChatMetadataMax = 8192;
		// size limits on Rich Presence data
		public const int MaxRichPresenceKeys = 20;
		public const int MaxRichPresenceKeyLength = 64;
		public const int MaxRichPresenceValueLength = 256;
		// game server flags
		public const int ServerFlagNone = 0x00;
		public const int ServerFlagActive = 0x01; // server has users playing
		public const int ServerFlagSecure = 0x02; // server wants to be secure
		public const int ServerFlagDedicated = 0x04; // server is dedicated
		public const int ServerFlagLinux = 0x08; // linux build
		public const int ServerFlagPassworded = 0x10; // password protected
		public const int ServerFlagPrivate = 0x20; // server shouldn't list on master server and
		// game server flags
		public const int FavoriteFlagNone = 0x00;
		public const int FavoriteFlagFavorite = 0x01; // this game favorite entry is for the favorites list
		public const int FavoriteFlagHistory = 0x02; // this game favorite entry is for the history list
		//-----------------------------------------------------------------------------
		// Purpose: Defines the largest allowed file size. Cloud files cannot be written
		// in a single chunk over 100MB (and cannot be over 200MB total.)
		//-----------------------------------------------------------------------------
		public const int MaxCloudFileChunkSize = 100 * 1024 * 1024;
		public const int PublishedDocumentTitleMax = 128 + 1;
		public const int PublishedDocumentDescriptionMax = 8000;
		public const int PublishedDocumentChangeDescriptionMax = 8000;
		public const int EnumeratePublishedFilesMaxResults = 50;
		public const int TagListMax = 1024 + 1;
		public const int FilenameMax = 260;
		public const int PublishedFileURLMax = 256;
		public const int ScreenshotMaxTaggedUsers = 32;
		public const int ScreenshotMaxTaggedPublishedFiles = 32;
		public const int UfsTagTypeMax = 255;
		public const int UfsTagValueMax = 255;
		// Required with of a thumbnail provided to AddScreenshotToLibrary.  If you do not provide a thumbnail
		// one will be generated.
		public const int ScreenshotThumbWidth = 200;
		public const int NumUGCResultsPerPage = 50;
		public const int DeveloperMetadataMax = 5000;
		// size limit on stat or achievement name (UTF-8 encoded)
		public const int StatNameMax = 128;
		// maximum number of bytes for a leaderboard name (UTF-8 encoded)
		public const int LeaderboardNameMax = 128;
		// maximum number of details int32's storable for a single leaderboard entry
		public const int LeaderboardDetailsMax = 64;
		//
		// Max size (in bytes of UTF-8 data, not in characters) of server fields, including null terminator.
		// WARNING: These cannot be changed easily, without breaking clients using old interfaces.
		//
		public const int MaxGameServerGameDir = 32;
		public const int MaxGameServerMapName = 32;
		public const int MaxGameServerGameDescription = 64;
		public const int MaxGameServerName = 64;
		public const int MaxGameServerTags = 128;
		public const int MaxGameServerGameData = 2048;
		public const int SteamAccountIdMask = -1;
		public const int SteamAccountInstanceMask = 0x000FFFFF;
		// we allow 3 simultaneous user account instances right now, 1= desktop, 2 = console, 4 = web, 0 = all
		public const int SteamUserDesktopInstance = 1;
		public const int SteamUserConsoleInstance = 2;
		public const int SteamUserWebInstance = 4;
		public const int GameExtraInfoMax = 64;
		public const int SteamEncryptedAppTicketSymmetricKeyLen = 32;
		public const int SaltSize = 8;
		public const ulong GidNil = 0xffffffffffffffff;
		public const ulong TxnIdNil = GidNil;
		public const ulong TxnIdUnknown = 0;
		public const int PackageIdFreeSub = 0x0;
		public const int PackageIdInvalid = -1;
		public const ulong AssetClassIdInvalid = 0x0;
		public const int PhysicalItemIdInvalid = 0x0;
		public const int CellIdInvalid = -1;
		public const int PartnerIdInvalid = 0;
		public const int STEAM_CONTROLLER_MAX_COUNT = 16;
		public const int STEAM_CONTROLLER_MAX_ANALOG_ACTIONS = 16;
		public const int STEAM_CONTROLLER_MAX_DIGITAL_ACTIONS = 128;
		public const int STEAM_CONTROLLER_MAX_ORIGINS = 8;
		// When sending an option to a specific controller handle, you can send to all controllers via this command
		public const ulong STEAM_CONTROLLER_HANDLE_ALL_CONTROLLERS = 0xFFFFFFFFFFFFFFFF;
		public const float STEAM_CONTROLLER_MIN_ANALOG_ACTION_DATA = -1.0f;
		public const float STEAM_CONTROLLER_MAX_ANALOG_ACTION_DATA = 1.0f;
		public const ushort MASTERSERVERUPDATERPORT_USEGAMESOCKETSHARE	= 0xFFFF;
		public const int INVALID_HTTPREQUEST_HANDLE		= 0;
		// maximum number of characters a lobby metadata key can be
		public const byte MaxLobbyKeyLength = 255;
		public const int SteamMusicNameMaxLength = 255;
		public const int SteamMusicPngMaxLength = 65535;
		//-----------------------------------------------------------------------------
		// Constants used for query ports.
		//-----------------------------------------------------------------------------
		public const int QUERY_PORT_NOT_INITIALIZED		= 0xFFFF; // We haven't asked the GS for this query port's actual value yet.
		public const int QUERY_PORT_ERROR				= 0xFFFE; // We were unable to get the query port for this server.
	}
}
